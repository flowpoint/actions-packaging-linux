# action name
name: 'build-linux-packages'

# action author
author: 'Kyle Penfound <kpenfound@hashicorp.com>'

# action description
description: 'Packages binaries using nfpm.'

# action input values
inputs:
  name:
    description: 'Product name.'
    default: ''
    required: true
  arch:
    description: 'Build architecture.'
    default: ''
    required: true
  version:
    description: 'Product semver version.'
    default: ''
    required: true
  maintainer:
    description: 'Maintainer name.'
    default: ''
    required: false
  description:
    description: 'Product description.'
    default: ''
    required: false
  homepage:
    description: 'Product homepage.'
    default: ''
    required: false
  license:
    description: 'Product license.'
    default: ''
    required: false
  binary:
    description: 'Binary location to package.'
    default: ''
    required: true
  config_dir:
    description: 'Directory of configs in desired filesystem structure.'
    default: ''
    required: false
  deb_depends:
    description: 'Comma separated list of deb dependencies.'
    default: ''
    required: false
  rpm_depends:
    description: 'Comma separated list of rpm dependencies.'
    default: ''
    required: false
  preinstall:
    description: 'Preinstall script location.'
    default: ''
    required: false
  postinstall:
    description: 'Postinstall script location.'
    default: ''
    required: false
  preremove:
    description: 'Preremove script location.'
    default: ''
    required: false
  postremove:
    description: 'Postremove script location.'
    default: ''
    required: false

# action runner (golang:latest image)
runs:
  using: composite
  steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Build nfpm_template
      shell: bash
      env:
          GO111MODULE: 'on'
          CGO_ENABLED: '0'
          INPUT_NAME: ${{ inputs.name }}
          INPUT_ARCH:  ${{ inputs.arch }}
          INPUT_VERSION:  ${{ inputs.version }}
          INPUT_MAINTAINER:  ${{ inputs.maintainer }}
          INPUT_DESCRIPTION: ${{ inputs.description }}
          INPUT_HOMEPAGE: ${{ inputs.homepage }}
          INPUT_LICENSE: ${{ inputs.license }}
          INPUT_BINARY: ${{ inputs.binary }}
          INPUT_CONFIG_DIR: ${{ inputs.config_dir }}
          INPUT_PREINSTALL: ${{ inputs.preinstall }}
          INPUT_POSTINSTALL: ${{ inputs.postinstall }}
          INPUT_PREREMOVE: ${{ inputs.preremove }}
          INPUT_POSTREMOVE: ${{ inputs.postremove }}
          INPUT_RPM_DEPENDS: ${{ inputs.rpm_depends }}
          INPUT_DEB_DEPENDS: ${{ inputs.deb_depends }}
      run: |
          go mod download
          CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o nfpm_template
         
          chmod +x ./nfpm_template
          
    - name: Install nfpm
      shell: bash
      run: curl -sfL https://install.goreleaser.com/github.com/goreleaser/nfpm.sh | sh

#     - name: Build deb
#       shell: bash
#       run: ./bin/nfpm pkg --packager deb --target .

#     - name: Build rpm
#       shell: bash
#       run: ./bin/nfpm pkg --packager rpm --target .
          
#     - name: Install tool
#       shell: bash
#       run: |
#         curl -Lo nfpm.tar.gz https://github.com/goreleaser/nfpm/releases/download/v2.5.1/nfpm_2.5.1_Linux_x86_64.tar.gz \
#         && tar -xf nfpm.tar.gz && cp nfpm /usr/local/bin/nfpm
#         chmod +x ./bin/nfpm
        
#         echo $(/usr/local/bin/nfpm)
#         ls -lah /usr/local/bin/nfpm
        
    - name: Build nfpm_template
      run: |
        ls -lah 
        echo "Creating template files..."
        echo ${{ inputs.rpm_depends }}
        ${{ inputs.rpm_depends }} ./nfpm_template > ./nfpm_rpm_config.yaml
        ${{ inputs.deb_depends }} ./nfpm_template > ./nfpm_deb_config.yaml
        
        ls -lah 
        cat nfpm_deb_config.yaml
        
        echo "Packaging..."
        ./bin/nfpm package -f ./nfpm_rpm_config.yaml -p rpm -t ./out/
        ./bin/nfpm package -f ./nfpm_deb_config.yaml -p deb -t ./out/
        ls -lah ./out
        ls -lah
      shell: bash
    - name: Upload 
      uses: actions/upload-artifact@v2
      with:
        name: test
        path: test
#  using: 'docker'
#  image: 'Dockerfile'
#  env:
#    GO111MODULE: 'on'
